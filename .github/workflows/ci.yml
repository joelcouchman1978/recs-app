name: CI
on:
  pull_request:
  push:
    branches: [main]
permissions:
  contents: read
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true
jobs:
  test-and-health:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v4

      - name: Detect Python
        id: detect_py
        run: |
          if ls -1 **/*.py 2>/dev/null | grep -q . || [ -f requirements.txt ] || [ -f pyproject.toml ]; then echo "is_python=true" >> $GITHUB_OUTPUT; else echo "is_python=false" >> $GITHUB_OUTPUT; fi

      - name: Setup Python
        if: steps.detect_py.outputs.is_python == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Python deps (best effort)
        if: steps.detect_py.outputs.is_python == 'true'
        run: |
          python -m pip install -U pip wheel
          if [ -f pyproject.toml ]; then pip install -e ".[dev]" || true; pip install -e . || true; fi
          if [ -f requirements.txt ]; then pip install -r requirements.txt || true; fi
          python - <<'PY'
import importlib, subprocess, sys

def ensure(pkg):
    try:
        importlib.import_module(pkg)
    except Exception:
        subprocess.check_call([sys.executable, "-m", "pip", "install", pkg])
for pkg in ["fastapi", "pydantic", "sqlmodel"]:
    ensure(pkg)
PY
          pip install pytest || true

      - name: Run smoke pytest only (SQLite/no-Redis)
        if: steps.detect_py.outputs.is_python == 'true'
        env:
          USE_SQLITE: '1'
          DISABLE_REDIS: '1'
          PYTHONPATH: '.'
        run: |
          if [ -f apps/api/tests/test_smoke_ci.py ]; then
            pytest -q apps/api/tests/test_smoke_ci.py
          else
            if ls -1 tests/*.py apps/api/tests/*.py test_*.py *_test.py 2>/dev/null | grep -q .; then pytest -q; else echo "No tests detected â€” passing"; fi
          fi

      - name: Detect Web (Next.js)
        id: detect_web
        run: |
          if [ -f apps/web/package.json ]; then echo "has_web=true" >> $GITHUB_OUTPUT; else echo "has_web=false" >> $GITHUB_OUTPUT; fi

      - name: Setup Node (web)
        if: steps.detect_web.outputs.has_web == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Build Next.js web
        if: steps.detect_web.outputs.has_web == 'true'
        run: |
          corepack enable || true
          pnpm --version || npm i -g pnpm
          pnpm -C apps/web install
          pnpm -C apps/web build
